1.用户 user
User
+	GET    /user/	               获得所有user的一个json array.  并且实现filtering和sorting    
+	GET    /user/$userId	获得id为userid的user
+	PUT    /user/                     新建一个user
+	PUT    /user/$userId        更新id为userid的user
+	DELETE /user/$userId	删除id为userid的user

+   GET    /user/$userId/pw/       获得id为userid的user的password属性
+   PUT    /user/$userId/pw/       修改id为userid的user的password属性
 
+POST     /passwdreset/              postdata: {id:userid, email:email}  
前台已经检查了用户和邮件的合法性。后台得到post请求后，生成新的随机密码，覆盖旧密码，并将新密码发送到相应的email中。密码格式：4到10位字母或数字，且至少包含一个数字。

json obj：
{
id: long,
username:string,
dispname:string, //显示名
first name:string,
last name:string,
email:string,
tel:string,
add:string,
zip:string,
im: [qq:string, skype:string],  //json arry
gender:string,  //F, M or A
birthday: long, //unix 毫秒时间戳
college:string,
major:string,
position:string //学联职位
article: string// 发文登记，是否需要审核？ 待讨论
}


2. 登入/ 登出
+   POST  /login/                                                          
json obj:
{
username: string
password:string
phpsessid:string   // 用在判断用户在线和不能同时异地登录，以及后台的用户登录log？
}
返回
{
success: true/false, 
id: long//该user的id
}


+ POST  /logout/
json obj:
{
userid: long  // user的id
phpsessid:string   
}

3. article管理
+	GET    /article/	               获得所有article的一个json array.  并且实现filtering和sorting 和paging   
+	GET    / article /$ article Id	获得id为articleid的article
+	PUT    / article /                             新建一个article
+	PUT    / article /$articleid            更新id为articleid            的article
+	DELETE / article /$articleid	删除id为articleid            的article
json obj:
{
id: long,  // article的id
parentid:long, //上级article的id, 用于回复？
title:string,
content:string,
creuser: long, //创建者userid
credate:long, //创建时间戳 unix毫秒   
moduser:long,//修改者 userid
moddate:long ,//修改时间戳
refer:[{userid:string, dispname:string, username:string},{userid:string, dispname:string, username:string },...],  // 涉及人或者参与者等，json array
state:string, //状态，例如审核状态等
}

